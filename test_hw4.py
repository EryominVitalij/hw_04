# 1. Программа, которая выводит на экран приветствие.

def test_greeting():

    name = "Анна"
    age = 25

    output = f"Привет, {name}! Тебе {age} лет." # Формируем нужную строку

    print(output) # Вывод результата получившейся строки

    # Проверяем результат
    assert output == "Привет, Анна! Тебе 25 лет."

# 2. Программа, которая берет длину и ширину прямоугольника
#    и считает его периметр и площадь.

def test_rectangle():

    a = 10
    b = 20

    perimeter = 2 * (a + b) # Считаем периметр прямоугольника
    assert perimeter == 60

    print(perimeter) # Вывод периметра прямоугольника

    area = a * b # Считаем площадь прямоугольника

    print(area) # Вывод площади прямоугольника

    assert area == 200

# 3. Программа, которая берет радиус круга и выводит на экран его длину и площадь.
#   Используйте константу PI

def test_circle():

    import math

    r = 23
    area = math.pi * (r ** 2) # Считаем площадь круга

    print(area) # Вывод площади круга

    assert area == 1661.9025137490005

    length = 2 * math.pi * r # Считаем длину окружности

    print(length) # Вывод длины окружности

    assert length == 144.51326206513048

# 4.Программа создаёт список из 10 случайных чисел от 1 до 100 (включая обе границы)
#   и сортирует его по возрастанию.

def test_random_list():

    from random import randint

    l = [randint(1,100) for i in range(10)] # Создаём список
    l.sort()  # Сортируем список по возрастанию

    print(l)  # Выводит список из 10 случайных чисел от 1 до 100 с сортировкой по возрастанию

    assert len(l) == 10
    assert all(l[i] <= l[i + 1] for i in range(len(l) - 1))

# 5. Программа удаляет из списка все повторяющиеся элементы

def test_unique_elements():

    l = [1, 2, 3, 4, 5, 5, 5, 6, 7, 8, 8, 9, 10, 10]

    l = list(set(l)) # Удаляем повторяющиеся элементы

    print(l) # Выводит значения списка без дубликатов

    assert isinstance(l, list)
    assert len(l) == 10
    assert l == [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

# 6. Программа создаёт словарь из двух списков.
#    Используя первый список как ключи, а второй - как значения.
#    С использованием встроенной функции zip.

def test_dicts():

    first = ["a", "b", "c", "d", "e"]
    second = [1, 2, 3, 4, 5]

    d = dict(zip(first, second))  # Создаём словарь

    print(d) # Выводит созданный с помощью встроенной функции zip словарь.

    assert isinstance(d, dict)
    assert len(d) == 5
    assert list(d.keys()) == first
    assert list(d.values()) == second